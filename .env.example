SERVICE_NAME=ui

# Port will be assigned by default in development but should be
# passed via environment for deploy targets.
PORT=

JWT_TOKEN=
JWT_SECRET=

# URIs of downstream services including ports and version
WATER_URI=
CRM_URI=
IDM_URI=
PERMIT_URI=
RETURNS_URI=
SYSTEM_URI=

# Remote log capturing details
ERRBIT_KEY=
ERRBIT_SERVER=

COOKIE_SECRET=

TEST_MODE=

BASE_URL=
GOOGLE_ANALYTICS_PROPERTY_ID=

REDIS_HOST=
REDIS_PORT=
REDIS_PASSWORD=

ALLOW_CHARGE_VERSION_UPLOADS=
TRIGGER_SROC_TWO_PART_TARIFF=

# Defaults to 20 if not set
BILL_RUNS_TO_DISPLAY_PER_PAGE=

NODE_ENV=production
ENVIRONMENT=pre

# TODO: When NODE_ENV is 'test' the previous team would often set `lazyConnect` in the ioRedis connection config to
# 'true'. It's not always the case though and things seem fine?? So, see if we can go without it (less complexity) else
# try and figure out why its needed when testing (nothing so far when Googling)
# From the docs
# By default, When a new Redis instance is created, it will connect to Redis server automatically. If you want to keep
# disconnected until a command is called, you can pass the lazyConnect option to the constructor
LAZY_REDIS=true

# Feature toggles
ENABLE_DELETE_ALL_BILLING_DATA_FEATURE=
SHOW_VERIFICATION_CODE_FEATURE=
USE_NEW_BILL_VIEW=

# Set log level for app. Default is 'info'
WRLS_LOG_LEVEL=debug
