name: Regression tests

on:
  workflow_dispatch:
    inputs:
      branch:
        description: 'Branch name'
        required: true

env:
  BRANCH: ${{ github.event.inputs.branch }}
  # Charge Module config
  AIRBRAKE_HOST: ${{ secrets.AIRBRAKE_HOST }}
  AIRBRAKE_KEY: ${{ secrets.AIRBRAKE_KEY }}
  ADMIN_CLIENT_ID: ${{ secrets.ADMIN_CLIENT_ID }}
  SYSTEM_CLIENT_ID: ${{ secrets.SYSTEM_CLIENT_ID }}
  RULES_SERVICE_URL: ${{ secrets.RULES_SERVICE_URL }}
  RULES_SERVICE_USER: ${{ secrets.RULES_SERVICE_USER }}
  RULES_SERVICE_PASSWORD: ${{ secrets.RULES_SERVICE_PASSWORD }}
  DECISION_SERVICE_URL: ${{ secrets.DECISION_SERVICE_URL }}
  DECISION_SERVICE_USER: ${{ secrets.DECISION_SERVICE_USER }}
  DECISION_SERVICE_PASSWORD: ${{ secrets.AIRBRAKE_HOST }}
  # JWT
  JWT_SECRET: ${{ secrets.JWT_SECRET }}
  JWT_TOKEN: ${{ secrets.JWT_TOKEN }}
  # Notify
  TEST_NOTIFY_KEY: ${{ secrets.TEST_NOTIFY_KEY }}
  WHITELIST_NOTIFY_KEY: ${{ secrets.WHITELIST_NOTIFY_KEY }}
  LIVE_NOTIFY_KEY: ${{ secrets.LIVE_NOTIFY_KEY }}
  NOTIFY_CALLBACK_TOKEN: ${{ secrets.NOTIFY_CALLBACK_TOKEN }}
  # AWS
  AWS_REGION: ${{ secrets.AWS_REGION }}
  S3_KEY: ${{ secrets.S3_KEY }}
  S3_SECRET: ${{ secrets.S3_SECRET }}
  S3_BUCKET: ${{ secrets.S3_BUCKET }}
  COGNITO_HOST: ${{ secrets.COGNITO_HOST }}
  COGNITO_USERNAME: ${{ secrets.COGNITO_USERNAME }}
  COGNITO_PASSWORD: ${{ secrets.COGNITO_PASSWORD }}
  # ERRBIT
  ERRBIT_KEY: ${{ secrets.ERRBIT_KEY }}
  ERRBIT_SERVER: ${{ secrets.ERRBIT_SERVER }}
  # NALD
  NALD_ZIP_PASSWORD: ${{ secrets.NALD_ZIP_PASSWORD }}
  NALD_SERVICE_MAILBOX: ${{ secrets.NALD_SERVICE_MAILBOX }}
  # Misc
  CODECOV_TOKEN: ${{ secrets.CODECOV_TOKEN }}
  COMPANIES_HOUSE_API_KEY: ${{ secrets.COMPANIES_HOUSE_API_KEY }}
  COOKIE_SECRET: ${{ secrets.COOKIE_SECRET }}
  SLACK_HOOK: ${{ secrets.SLACK_HOOK }}
  #
  PGUSER: water_user
  PGHOST: localhost
  PGPASSWORD: password
  PGPORT: 5432
  PGDATABASE: permits
  ENVIRONMENT: dev
  DATABASE_URL: postgres://water_user:password@localhost:5432/permits
  # GitHub registry
  REGISTRY: ghcr.io

jobs:
  regression-test:
    runs-on: ubuntu-latest
    name: Regression Test
    strategy:
      fail-fast: false
      matrix:
        cypressTests: [ 'internal', 'external' ]
    permissions:
      contents: read
      packages: read
    steps:
      - name: Log in to registry
        run: echo "${{ secrets.DEFRA_DIGITAL_CI }}" | docker login ghcr.io -u ${{ github.actor }} --password-stdin
      - name: Checkout water-abstraction-orchestration
        uses: actions/checkout@v2
        with:
          repository: DEFRA/water-abstraction-orchestration
          path: 'water-abstraction-orchestration'
      - name: Compose - dependencies
        run: |
          bash ./water-abstraction-orchestration/dependencies/start.sh
      - name: nap
        run: |
          sleep 60
      - name: WRLS Database Setup
        run: |
          bash ./water-abstraction-orchestration/dependencies/database/configure-psql.sh
          bash ./water-abstraction-orchestration/dependencies/database/setup-user.sh
          bash ./water-abstraction-orchestration/dependencies/database/create-schema.sh
      - name: Charge Module - Migrate & Seed
        run: |
          bash ./water-abstraction-orchestration/dependencies/charge-module/migrate.sh
          bash ./water-abstraction-orchestration/dependencies/charge-module/seed.sh
      - name: Compose - services
        run: |
          bash ./water-abstraction-orchestration/services/docker/start.sh ${{ env.BRANCH }}
          docker ps
      - name: Migrate services
        run: |
          bash ./water-abstraction-orchestration/services/docker/migrate.sh
          sleep 2m
      #      Tests setup
      - name: Checkout water-abstraction-ui
        uses: actions/checkout@v2
        with:
          repository: DEFRA/water-abstraction-ui
          path: 'water-abstraction-ui'
      - name: Node
        uses: actions/setup-node@v2
        with:
          node-version: 14
          cache: 'npm'
          cache-dependency-path: './water-abstraction-ui/package-lock.json'
      - name: nap
        run: |
          sleep 120
      - name: Test setup
        run: |
          bash ./water-abstraction-orchestration/dependencies/database/test-setup.sh
      - name: Cypress test - ${{ matrix.cypressTests }}
        uses: cypress-io/github-action@v2
        continue-on-error: true
        with:
          install: true
          working-directory: "./water-abstraction-ui"
          browser: chrome
          headless: true
          spec: |
            cypress/integration/${{ matrix.cypressTests }}/**[!.ci].spec.js
          config: pageLoadTimeout=100000,baseUrl=http://localhost:8008,video=false
        env:
          WATER_URI: "http://localhost:8001/water/1.0"
          ADMIN_URI: 'http://localhost:8008/'
          USER_URI: 'http://localhost:8000/'
          BASE_URL: 'http://localhost:8008'
          JWT_TOKEN: ${{ env.JWT_TOKEN }}
          NOTIFY_CALLBACK_TOKEN: ${{ env.NOTIFY_CALLBACK_TOKEN }}
#       Debug steps
      - name: docker logs water-abstraction-internal-ui
        continue-on-error: true
        run: |
          docker logs water-abstraction-internal-ui
      - name: docker logs water-abstraction-external-ui
        continue-on-error: true
        run: |
          docker logs water-abstraction-external-ui
      - name: docker logs water-abstraction-service-api
        continue-on-error: true
        run: |
          docker logs water-abstraction-service-api
      - name: Upload Cypress Artifact
        continue-on-error: true
        uses: actions/upload-artifact@v2
        with:
          name: cypress
          path: ./water-abstraction-ui/cypress/

